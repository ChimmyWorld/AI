{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport ApiService from \"./api\";\nvar AuthService = function () {\n  function AuthService() {\n    _classCallCheck(this, AuthService);\n  }\n  return _createClass(AuthService, null, [{\n    key: \"register\",\n    value: (function () {\n      var _register = _asyncToGenerator(function* (userData) {\n        return yield ApiService.post('/api/auth/register', userData, false);\n      });\n      function register(_x) {\n        return _register.apply(this, arguments);\n      }\n      return register;\n    }())\n  }, {\n    key: \"login\",\n    value: (function () {\n      var _login = _asyncToGenerator(function* (credentials) {\n        var response = yield ApiService.post('/api/auth/login', credentials, false);\n        if (response && response.token) {\n          yield ApiService.setAuthToken(response.token);\n        }\n        return response;\n      });\n      function login(_x2) {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }())\n  }, {\n    key: \"logout\",\n    value: (function () {\n      var _logout = _asyncToGenerator(function* () {\n        yield ApiService.setAuthToken(null);\n      });\n      function logout() {\n        return _logout.apply(this, arguments);\n      }\n      return logout;\n    }())\n  }, {\n    key: \"isAuthenticated\",\n    value: (function () {\n      var _isAuthenticated = _asyncToGenerator(function* () {\n        var token = yield ApiService.getAuthToken();\n        return !!token;\n      });\n      function isAuthenticated() {\n        return _isAuthenticated.apply(this, arguments);\n      }\n      return isAuthenticated;\n    }())\n  }, {\n    key: \"getCurrentUser\",\n    value: (function () {\n      var _getCurrentUser = _asyncToGenerator(function* () {\n        try {\n          return yield ApiService.get('/api/auth/me');\n        } catch (error) {\n          if (error.status === 401) {\n            yield ApiService.setAuthToken(null);\n          }\n          throw error;\n        }\n      });\n      function getCurrentUser() {\n        return _getCurrentUser.apply(this, arguments);\n      }\n      return getCurrentUser;\n    }())\n  }]);\n}();\nexport default AuthService;","map":{"version":3,"names":["ApiService","AuthService","_classCallCheck","_createClass","key","value","_register","_asyncToGenerator","userData","post","register","_x","apply","arguments","_login","credentials","response","token","setAuthToken","login","_x2","_logout","logout","_isAuthenticated","getAuthToken","isAuthenticated","_getCurrentUser","get","error","status","getCurrentUser"],"sources":["C:/Users/WW/CascadeProjects/bullseye-mobile/src/services/auth.js"],"sourcesContent":["import ApiService from './api';\n\n/**\n * Authentication service\n */\nclass AuthService {\n  /**\n   * Register a new user\n   * @param {Object} userData - User registration data\n   * @returns {Promise<Object>} - Registration response\n   */\n  static async register(userData) {\n    return await ApiService.post('/api/auth/register', userData, false);\n  }\n\n  /**\n   * Login a user\n   * @param {Object} credentials - User login credentials\n   * @returns {Promise<Object>} - Login response with token\n   */\n  static async login(credentials) {\n    const response = await ApiService.post('/api/auth/login', credentials, false);\n    \n    if (response && response.token) {\n      await ApiService.setAuthToken(response.token);\n    }\n    \n    return response;\n  }\n\n  /**\n   * Logout the current user\n   */\n  static async logout() {\n    await ApiService.setAuthToken(null);\n  }\n\n  /**\n   * Check if user is authenticated\n   * @returns {Promise<boolean>} - Authentication status\n   */\n  static async isAuthenticated() {\n    const token = await ApiService.getAuthToken();\n    return !!token;\n  }\n\n  /**\n   * Get the current authenticated user info\n   * @returns {Promise<Object>} - User data\n   */\n  static async getCurrentUser() {\n    try {\n      return await ApiService.get('/api/auth/me');\n    } catch (error) {\n      if (error.status === 401) {\n        // Token expired or invalid, clear it\n        await ApiService.setAuthToken(null);\n      }\n      throw error;\n    }\n  }\n}\n\nexport default AuthService;\n"],"mappings":";;;AAAA,OAAOA,UAAU;AAAc,IAKzBC,WAAW;EAAA,SAAAA,YAAA;IAAAC,eAAA,OAAAD,WAAA;EAAA;EAAA,OAAAE,YAAA,CAAAF,WAAA;IAAAG,GAAA;IAAAC,KAAA;MAAA,IAAAC,SAAA,GAAAC,iBAAA,CAMf,WAAsBC,QAAQ,EAAE;QAC9B,aAAaR,UAAU,CAACS,IAAI,CAAC,oBAAoB,EAAED,QAAQ,EAAE,KAAK,CAAC;MACrE,CAAC;MAAA,SAFYE,QAAQA,CAAAC,EAAA;QAAA,OAAAL,SAAA,CAAAM,KAAA,OAAAC,SAAA;MAAA;MAAA,OAARH,QAAQ;IAAA;EAAA;IAAAN,GAAA;IAAAC,KAAA;MAAA,IAAAS,MAAA,GAAAP,iBAAA,CASrB,WAAmBQ,WAAW,EAAE;QAC9B,IAAMC,QAAQ,SAAShB,UAAU,CAACS,IAAI,CAAC,iBAAiB,EAAEM,WAAW,EAAE,KAAK,CAAC;QAE7E,IAAIC,QAAQ,IAAIA,QAAQ,CAACC,KAAK,EAAE;UAC9B,MAAMjB,UAAU,CAACkB,YAAY,CAACF,QAAQ,CAACC,KAAK,CAAC;QAC/C;QAEA,OAAOD,QAAQ;MACjB,CAAC;MAAA,SARYG,KAAKA,CAAAC,GAAA;QAAA,OAAAN,MAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAALM,KAAK;IAAA;EAAA;IAAAf,GAAA;IAAAC,KAAA;MAAA,IAAAgB,OAAA,GAAAd,iBAAA,CAalB,aAAsB;QACpB,MAAMP,UAAU,CAACkB,YAAY,CAAC,IAAI,CAAC;MACrC,CAAC;MAAA,SAFYI,MAAMA,CAAA;QAAA,OAAAD,OAAA,CAAAT,KAAA,OAAAC,SAAA;MAAA;MAAA,OAANS,MAAM;IAAA;EAAA;IAAAlB,GAAA;IAAAC,KAAA;MAAA,IAAAkB,gBAAA,GAAAhB,iBAAA,CAQnB,aAA+B;QAC7B,IAAMU,KAAK,SAASjB,UAAU,CAACwB,YAAY,CAAC,CAAC;QAC7C,OAAO,CAAC,CAACP,KAAK;MAChB,CAAC;MAAA,SAHYQ,eAAeA,CAAA;QAAA,OAAAF,gBAAA,CAAAX,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAfY,eAAe;IAAA;EAAA;IAAArB,GAAA;IAAAC,KAAA;MAAA,IAAAqB,eAAA,GAAAnB,iBAAA,CAS5B,aAA8B;QAC5B,IAAI;UACF,aAAaP,UAAU,CAAC2B,GAAG,CAAC,cAAc,CAAC;QAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;UACd,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;YAExB,MAAM7B,UAAU,CAACkB,YAAY,CAAC,IAAI,CAAC;UACrC;UACA,MAAMU,KAAK;QACb;MACF,CAAC;MAAA,SAVYE,cAAcA,CAAA;QAAA,OAAAJ,eAAA,CAAAd,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAdiB,cAAc;IAAA;EAAA;AAAA;AAa7B,eAAe7B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}