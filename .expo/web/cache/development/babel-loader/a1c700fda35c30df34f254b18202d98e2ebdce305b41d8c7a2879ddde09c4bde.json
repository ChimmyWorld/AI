{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport RegisterScreen from \"../screens/RegisterScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport CreatePostScreen from \"../screens/CreatePostScreen\";\nimport PostDetailScreen from \"../screens/PostDetailScreen\";\nimport NotificationsScreen from \"../screens/NotificationsScreen\";\nimport SearchScreen from \"../screens/SearchScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MainStack = createStackNavigator();\nvar AuthStack = createStackNavigator();\nvar HomeStack = createStackNavigator();\nvar ProfileStack = createStackNavigator();\nvar NotificationsStack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar AuthNavigator = function AuthNavigator() {\n  return _jsxs(AuthStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(AuthStack.Screen, {\n      name: \"Login\",\n      component: LoginScreen\n    }), _jsx(AuthStack.Screen, {\n      name: \"Register\",\n      component: RegisterScreen\n    })]\n  });\n};\nvar HomeStackNavigator = function HomeStackNavigator() {\n  return _jsxs(HomeStack.Navigator, {\n    children: [_jsx(HomeStack.Screen, {\n      name: \"Feed\",\n      component: HomeScreen,\n      options: {\n        title: 'Bullseye',\n        headerStyle: {\n          backgroundColor: '#FFFFFF'\n        },\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      }\n    }), _jsx(HomeStack.Screen, {\n      name: \"PostDetail\",\n      component: PostDetailScreen,\n      options: {\n        title: 'Post'\n      }\n    }), _jsx(HomeStack.Screen, {\n      name: \"Search\",\n      component: SearchScreen,\n      options: {\n        title: 'Search'\n      }\n    })]\n  });\n};\nvar ProfileStackNavigator = function ProfileStackNavigator() {\n  return _jsx(ProfileStack.Navigator, {\n    children: _jsx(ProfileStack.Screen, {\n      name: \"UserProfile\",\n      component: ProfileScreen,\n      options: {\n        title: 'Profile'\n      }\n    })\n  });\n};\nvar NotificationsStackNavigator = function NotificationsStackNavigator() {\n  return _jsx(NotificationsStack.Navigator, {\n    children: _jsx(NotificationsStack.Screen, {\n      name: \"Notifications\",\n      component: NotificationsScreen,\n      options: {\n        title: 'Notifications'\n      }\n    })\n  });\n};\nvar TabNavigator = function TabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: {\n      tabBarActiveTintColor: '#FF4500',\n      tabBarInactiveTintColor: '#787C7E',\n      headerShown: false,\n      tabBarStyle: {\n        paddingBottom: 5,\n        paddingTop: 5\n      }\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeStackNavigator,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref) {\n          var color = _ref.color,\n            size = _ref.size;\n          return _jsx(MaterialIcons, {\n            name: \"home\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Search\",\n      component: SearchScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n            size = _ref2.size;\n          return _jsx(MaterialIcons, {\n            name: \"search\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"CreatePost\",\n      component: CreatePostScreen,\n      options: {\n        tabBarLabel: 'Post',\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n            size = _ref3.size;\n          return _jsx(MaterialIcons, {\n            name: \"add-circle-outline\",\n            color: color,\n            size: 28\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Notifications\",\n      component: NotificationsStackNavigator,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color,\n            size = _ref4.size;\n          return _jsx(MaterialIcons, {\n            name: \"notifications\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileStackNavigator,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color,\n            size = _ref5.size;\n          return _jsx(MaterialIcons, {\n            name: \"person\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    })]\n  });\n};\nvar AppNavigator = function AppNavigator() {\n  var _useAuth = useAuth(),\n    isAuthenticated = _useAuth.isAuthenticated,\n    loading = _useAuth.loading;\n  if (loading) {\n    return null;\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsx(MainStack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: isAuthenticated() ? _jsx(MainStack.Screen, {\n        name: \"Main\",\n        component: TabNavigator\n      }) : _jsx(MainStack.Screen, {\n        name: \"Auth\",\n        component: AuthNavigator\n      })\n    })\n  });\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","createBottomTabNavigator","MaterialIcons","useAuth","HomeScreen","LoginScreen","RegisterScreen","ProfileScreen","CreatePostScreen","PostDetailScreen","NotificationsScreen","SearchScreen","jsx","_jsx","jsxs","_jsxs","MainStack","AuthStack","HomeStack","ProfileStack","NotificationsStack","Tab","AuthNavigator","Navigator","screenOptions","headerShown","children","Screen","name","component","HomeStackNavigator","options","title","headerStyle","backgroundColor","headerTitleStyle","fontWeight","ProfileStackNavigator","NotificationsStackNavigator","TabNavigator","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","paddingBottom","paddingTop","tabBarIcon","_ref","color","size","_ref2","tabBarLabel","_ref3","_ref4","_ref5","AppNavigator","_useAuth","isAuthenticated","loading"],"sources":["C:/Users/WW/CascadeProjects/bullseye-mobile/src/navigation/AppNavigator.js"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport { useAuth } from '../hooks/useAuth';\n\n// Import screens\nimport HomeScreen from '../screens/HomeScreen';\nimport LoginScreen from '../screens/LoginScreen';\nimport RegisterScreen from '../screens/RegisterScreen';\nimport ProfileScreen from '../screens/ProfileScreen';\nimport CreatePostScreen from '../screens/CreatePostScreen';\nimport PostDetailScreen from '../screens/PostDetailScreen';\nimport NotificationsScreen from '../screens/NotificationsScreen';\nimport SearchScreen from '../screens/SearchScreen';\n\n// Stacks\nconst MainStack = createStackNavigator();\nconst AuthStack = createStackNavigator();\nconst HomeStack = createStackNavigator();\nconst ProfileStack = createStackNavigator();\nconst NotificationsStack = createStackNavigator();\n\n// Tabs\nconst Tab = createBottomTabNavigator();\n\n// Authentication navigator\nconst AuthNavigator = () => (\n  <AuthStack.Navigator screenOptions={{ headerShown: false }}>\n    <AuthStack.Screen name=\"Login\" component={LoginScreen} />\n    <AuthStack.Screen name=\"Register\" component={RegisterScreen} />\n  </AuthStack.Navigator>\n);\n\n// Home stack navigator\nconst HomeStackNavigator = () => (\n  <HomeStack.Navigator>\n    <HomeStack.Screen \n      name=\"Feed\" \n      component={HomeScreen}\n      options={{ \n        title: 'Bullseye',\n        headerStyle: {\n          backgroundColor: '#FFFFFF',\n        },\n        headerTitleStyle: {\n          fontWeight: 'bold',\n        }\n      }} \n    />\n    <HomeStack.Screen \n      name=\"PostDetail\" \n      component={PostDetailScreen}\n      options={{ title: 'Post' }} \n    />\n    <HomeStack.Screen \n      name=\"Search\" \n      component={SearchScreen}\n      options={{ title: 'Search' }} \n    />\n  </HomeStack.Navigator>\n);\n\n// Profile stack navigator\nconst ProfileStackNavigator = () => (\n  <ProfileStack.Navigator>\n    <ProfileStack.Screen \n      name=\"UserProfile\" \n      component={ProfileScreen}\n      options={{ title: 'Profile' }} \n    />\n  </ProfileStack.Navigator>\n);\n\n// Notifications stack navigator\nconst NotificationsStackNavigator = () => (\n  <NotificationsStack.Navigator>\n    <NotificationsStack.Screen \n      name=\"Notifications\" \n      component={NotificationsScreen}\n      options={{ title: 'Notifications' }} \n    />\n  </NotificationsStack.Navigator>\n);\n\n// Main tab navigator (for authenticated users)\nconst TabNavigator = () => (\n  <Tab.Navigator\n    screenOptions={{\n      tabBarActiveTintColor: '#FF4500',\n      tabBarInactiveTintColor: '#787C7E',\n      headerShown: false,\n      tabBarStyle: {\n        paddingBottom: 5,\n        paddingTop: 5,\n      }\n    }}\n  >\n    <Tab.Screen \n      name=\"Home\" \n      component={HomeStackNavigator} \n      options={{\n        tabBarIcon: ({ color, size }) => (\n          <MaterialIcons name=\"home\" color={color} size={size} />\n        ),\n      }}\n    />\n    <Tab.Screen \n      name=\"Search\" \n      component={SearchScreen} \n      options={{\n        tabBarIcon: ({ color, size }) => (\n          <MaterialIcons name=\"search\" color={color} size={size} />\n        ),\n      }}\n    />\n    <Tab.Screen \n      name=\"CreatePost\" \n      component={CreatePostScreen} \n      options={{\n        tabBarLabel: 'Post',\n        tabBarIcon: ({ color, size }) => (\n          <MaterialIcons name=\"add-circle-outline\" color={color} size={28} />\n        ),\n      }}\n    />\n    <Tab.Screen \n      name=\"Notifications\" \n      component={NotificationsStackNavigator} \n      options={{\n        tabBarIcon: ({ color, size }) => (\n          <MaterialIcons name=\"notifications\" color={color} size={size} />\n        ),\n      }}\n    />\n    <Tab.Screen \n      name=\"Profile\" \n      component={ProfileStackNavigator} \n      options={{\n        tabBarIcon: ({ color, size }) => (\n          <MaterialIcons name=\"person\" color={color} size={size} />\n        ),\n      }}\n    />\n  </Tab.Navigator>\n);\n\n// Main navigator\nconst AppNavigator = () => {\n  const { isAuthenticated, loading } = useAuth();\n  \n  // Show loading screen if auth is being checked\n  if (loading) {\n    return null; // You could add a splash screen here\n  }\n  \n  return (\n    <NavigationContainer>\n      <MainStack.Navigator screenOptions={{ headerShown: false }}>\n        {isAuthenticated() ? (\n          <MainStack.Screen name=\"Main\" component={TabNavigator} />\n        ) : (\n          <MainStack.Screen name=\"Auth\" component={AuthNavigator} />\n        )}\n      </MainStack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default AppNavigator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}